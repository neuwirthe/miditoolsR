---
title: "simplify notes"
format: html
---


```{r}
nokia_df <-
  "~/Nokia_Tune.mid" |> read_midi_file()
```
```{r}
nokia_df 
```

```{r}
nokia_df |>
  filter(command %in% c("Note_on_c","Note_off_c")) |>
  mutate(command = ifelse((command == "Note_on_c") & (p3 == 0), "Note_off_c",
                          command)) |>
  mutate(p3=ifelse(command == "Note_off_c",0,p3)) ->
  notes_all_cleaned
```
```{r}
notes_all_cleaned |>
  filter(track==3)
```

```{r}
notes_all_cleaned |> filter(command=="Note_off_c") |>
  rowwise() |>
  group_split() ->
notes_off
notes_all_cleaned |> 
  filter(command=="Note_on_c") ->
  notes_on
```

```{r}
notes_off  |>
  map(\(x){
    notes_on |>
      filter(time < x$time & p1 == x$p1 & p2 == x$p2) |>
      tail(1) |>
      mutate(p4=x$time - time,
             command="Note_c")
  }
      ) |>
  bind_rows() ->
  notes_combined
```
Remove all Note_on_c with Note_c with corresponding Note_c
```{r}
notes_combined |>
  filter(track==3)
```

```{r}
notes_on |>
  bind_rows(notes_combined) |>
  arrange(track,time,p1,p2,p3) |>
  filter(track==3)
```

```{r}
notes_all_cleaned |>
  filter(track==3) |>
  filter(time >= 2314)
```

keep note_on with no matching note_off

```{r}
has_matching_note_off <- function(x){
    (notes_all_cleaned |>
    filter(command == "Note_off_c",# &
             p1 == x$p1 &
             p2 == x$p2 &
             time >= x$time) |>
    nrow()) > 0
}
```

```{r}
notes_all_cleaned[1,] |>
  has_matching_note_off()
```


```{r}
notes_all_cleaned |>
  filter(command=="Note_on_c") |>
  rowwise() |>
  group_split() |>
  map(\(x)has_matching_note_off(x)) |>
  unlist() ->
  has_match

notes_all_cleaned |>
  filter(command=="Note_on_c") |>
  bind_cols(has_match=has_match) |>
  filter(!has_match)

```
```{r}
notes_all_cleaned |>
  filter(track==6)
```
```{r}
notes_all_cleaned |>
  filter(track==6) |>
  mutate_at(vars(p1:p3),as.integer) |>
  make_midi_events() |>
  play()
```

```{r}
nokia_df |> filter(track==6)
```

```{r}
has_matching_note_off <- function(x){
    (notes_all_cleaned |>
    filter(command == "Note_off_c",# &
             p1 == x$p1 &
             p2 == x$p2 &
             time >= x$time) |>
    nrow()) > 0
}
has_matching_note_on <- function(x){
    (notes_all_cleaned |>
    filter(command == "Note_on_c",# &
             p1 == x$p1 &
             p2 == x$p2 &
             time <= x$time) |>
    nrow()) > 0
}

```



```{r}
simplify_notes <- function(full_df){
  full_df |>
    filter(command  %in% c("Note_on_c", "Note_off_c")) |>
    rename(channel=p1) ->
    notes_and_drums
  full_df |>
    filter(!(command  %in% c("Note_on_c", "Note_off_c"))) ->
    other_all
  notes_and_drums |>
    filter(channel!=10) ->
    notes_on_off
  notes_and_drums |>
    filter(channel==10) ->
    drum_beats
  notes_on_off |>
    mutate(command = ifelse((command == "Note_on_c") & (p3 == 0), "Note_off_c",
                          command)) |>
    mutate(p3=ifelse(command == "Note_off_c",0,p3)) ->
    notes_on_off_cleaned
notes_on_off_cleaned |>
  filter(command=="Note_on_c") |>
  rowwise() |>
  group_split() |>
  map(\(x)has_matching_note_off(x)) |>
  unlist() ->
  has_match
notes_on_off_cleaned |>    
 bind_cols(has_match=has_match) ->
 notes_on_off_has_match    

notes_on_off_has_match |>    
  filter(!has_match) ->
  notes_on_no_match

notes_on_off_has_match |>    
  filter(has_match) ->
  notes_on_with_match


}
```

