---
title: "simplify notes"
format: html
---


```{r}
nokia_df <-
  "~/Nokia_Tune.mid" |> read_midi_file()
```

```{r}
nokia_df 
```
```{r}
sort_tracks_in_file <- function(full_df){
  full_df |>
    filter(command == "Header") ->
    header
  full_df |>
    filter(command == "End_of_file") ->
    eof
  full_df |> 
    filter(!(command %in% c("Header", "End_of_file"))) |>
    group_by(track) |>
    group_split() |>
    map(\(x){
      x |>
        filter(command=="Start_track") -> start_track
      x |>
        filter(command=="End_track") -> end_track
      bind_rows(
        start_track,
        x |> 
          filter(!(command %in% c("Start_track", "End_track"))),
        end_track
      )
    }) |>
      bind_rows()  -> 
      tracks
    bind_rows(
      header,
      tracks,
      eof
    )
}
```

```{r}
clean_notes_on_off <- function(full_df){
  full_df |>
    filter(command  %in% c("Note_on_c", "Note_off_c")) ->
    notes_and_drums
  full_df |>
    filter(!(command  %in% c("Note_on_c", "Note_off_c"))) ->
    other_all
  notes_and_drums |>
    mutate(command = ifelse((command == "Note_on_c") & (p3 == 0), "Note_off_c",
                          command)) |>
    mutate(p3=ifelse(command == "Note_off_c",0,p3)) ->
    notes_on_off_cleaned
  bind_rows(
    other_all,
    notes_on_off_cleaned) |>
  arrange(track,time) |> 
    sort_tracks_in_file()
}
```


```{r}
nokia_df |> 
  play()
```

```{r}
nokia_df |> 
  clean_notes_on_off() |>
  play()
```


```{r}
simplify_notes <- function(clean_df){
  clean_df |>
    filter(command=="Note_off_c") ->
    notes_off
  clean_df |>
    filter(command=="Note_on_c") ->
    notes_on
  notes_on |>
    rowwise() |>
    group_split() |>
  map(\(x){
    notes_off |>
    filter(time >= x$time & p2 == x$p2) -> 
      temp_df
    if(nrow(temp_df) > 0){
      return(
        bind_rows(x,
                  temp_df |> head(1))
      )
    } else {
      return(x)
    }
  }) |>
    map(\(x){
    if(nrow(x) == 2){
      slice(x,1) |>
        mutate(p4=slice(x,2)$time - time) |>
        mutate(command="Note_c")
    } else {
      slice(x,1)
    } 
    }
    ) |>
    bind_rows()
}
```

```{r}
combine_on_off <- function(full_df){
  full_df |>
    filter(!(command %in% c("Note_on_c", "Note_off_c"))) ->
    other_commands
  full_df |>
    filter(command %in% c("Note_on_c", "Note_off_c")) |>
    clean_notes_on_off() |>
    simplify_notes() ->
    notes

  bind_rows(
    other_commands,
    notes,
  )  |>
    arrange(track,time) |>
    sort_tracks_in_file() |>
    add_class("midi_df_ext") |>
    remove_class("midi_df")
}
```


```{r}
nokia_df |>
  combine_on_off() |>
#class()
play()
```


```{r}
nokia_df |> 
  combine_on_off() -> 
  combined
```


```{r}
nokia_df |> 
  combine_on_off() |>
  play()
```


```{r}
nokia_df
```
```{r}
expand_on_off <- function(full_df) {
  full_df |>
  filter(!(command == "Note_c")) ->
  other
  full_df |>
  filter(command == "Note_c") |>
    rowwise() |>
    group_split() |>
    map(\(x){
      end_time = as.integer(x$time) + as.integer(x$p4);
      bind_rows(
      x |>
        mutate(command="Note_on_c") |>
      mutate(p4=NA),
      x |> 
        mutate(time=end_time) |>
        mutate(command="Note_off_c")
      ) 
    }) |>
    bind_rows() ->
    notes_expanded
  bind_rows(
    other,
    notes_expanded) |>
    arrange(track,time) |>
    sort_tracks_in_file() |>
    add_class("midi_df")
}
```

```{r}
nokia_df |>
  combine_on_off() |>
  expand_on_off() |>
  play()
```


